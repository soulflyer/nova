        case 32:
            //[bankSelect setLit];
            [bankSelect setIntValue:value];
            [progr setBankSelect:value];
            
            break;

        case 64:
            //[sustain setLit];
            [sustain setIntValue:value];
            [progr setSustain:value];
            
            break;

        case 97:
            //[masterVolume setLit];
            [masterVolume setIntValue:value];
            [progr setMasterVolume:value];
            
            break;

        case 5:
            //[portamento setLit];
            [portamento setIntValue:value];
            [progr setPortamento:value];
            
            break;

        case 11:
            //[osc1Fine setLit];
            [osc1Fine setIntValue:value];
            [progr setOsc1Fine:value];
            [osc1FineText setIntValue:[program osc1Fine]]; 
            break;

        case 13:
            //[osc1Soften setLit];
            [osc1Soften setIntValue:value];
            [progr setOsc1Soften:value];
            [osc1 drawWave:[program osc1Wave] soften:[program osc1Soften] pulseWidth:[program osc1Width]]; 
            break;

        case 22:
            //[osc1Width setLit];
            [osc1Width setIntValue:value];
            [progr setOsc1Width:value];
            [osc1 drawWave:[program osc1Wave] soften:[program osc1Soften] pulseWidth:[program osc1Width]]; 
            break;

        case 49:
            //[osc1Sync setLit];
            [osc1Sync setIntValue:value];
            [progr setOsc1Sync:value];
            
            break;

        case 23:
            //[osc2Fine setLit];
            [osc2Fine setIntValue:value];
            [progr setOsc2Fine:value];
            [osc2FineText setIntValue:[program osc2Fine]]; 
            break;

        case 14:
            //[osc2Soften setLit];
            [osc2Soften setIntValue:value];
            [progr setOsc2Soften:value];
            [osc2 drawWave:[program osc2Wave] soften:[program osc2Soften] pulseWidth:[program osc2Width]]; 
            break;

        case 27:
            //[osc2Width setLit];
            [osc2Width setIntValue:value];
            [progr setOsc2Width:value];
            [osc2 drawWave:[program osc2Wave] soften:[program osc2Soften] pulseWidth:[program osc2Width]]; 
            break;

        case 50:
            //[osc2Sync setLit];
            [osc2Sync setIntValue:value];
            [progr setOsc2Sync:value];
            
            break;

        case 12:
            //[osc3Fine setLit];
            [osc3Fine setIntValue:value];
            [progr setOsc3Fine:value];
            [osc3FineText setIntValue:[program osc3Fine]]; 
            break;

        case 15:
            //[osc3Soften setLit];
            [osc3Soften setIntValue:value];
            [progr setOsc3Soften:value];
            [osc3 drawWave:[program osc3Wave] soften:[program osc3Soften] pulseWidth:[program osc3Width]]; 
            break;

        case 42:
            //[osc3Width setLit];
            [osc3Width setIntValue:value];
            [progr setOsc3Width:value];
            [osc3 drawWave:[program osc3Wave] soften:[program osc3Soften] pulseWidth:[program osc3Width]]; 
            break;

        case 51:
            //[osc3Sync setLit];
            [osc3Sync setIntValue:value];
            [progr setOsc3Sync:value];
            
            break;

        case 28:
            //[osc1Mix setLit];
            [osc1Mix setIntValue:value];
            [progr setOsc1Mix:value];
            
            break;

        case 29:
            //[osc2Mix setLit];
            [osc2Mix setIntValue:value];
            [progr setOsc2Mix:value];
            
            break;

        case 33:
            //[osc3Mix setLit];
            [osc3Mix setIntValue:value];
            [progr setOsc3Mix:value];
            
            break;

        case 31:
            //[ring13Mix setLit];
            [ring13Mix setIntValue:value];
            [progr setRing13Mix:value];
            
            break;

        case 4:
            //[ring23Mix setLit];
            [ring23Mix setIntValue:value];
            [progr setRing23Mix:value];
            
            break;

        case 30:
            //[noiseMix setLit];
            [noiseMix setIntValue:value];
            [progr setNoiseMix:value];
            
            break;

        case 17:
            //[lfo1Delay setLit];
            [lfo1Delay setIntValue:value];
            [progr setLfo1Delay:value];
            
            break;

        case 82:
            //[lfo1Offset setLit];
            [lfo1Offset setIntValue:value];
            [progr setLfo1Offset:value];
            
            break;

        case 16:
            //[lfo1Speed setLit];
            [lfo1Speed setIntValue:value];
            [progr setLfo1Speed:value];
            
            break;

        case 19:
            //[lfo2Delay setLit];
            [lfo2Delay setIntValue:value];
            [progr setLfo2Delay:value];
            
            break;

        case 83:
            //[lfo2Offset setLit];
            [lfo2Offset setIntValue:value];
            [progr setLfo2Offset:value];
            
            break;

        case 18:
            //[lfo2Speed setLit];
            [lfo2Speed setIntValue:value];
            [progr setLfo2Speed:value];
            
            break;

        case 75:
            //[env3Attack setLit];
            [env3Attack setIntValue:value];
            [progr setEnv3Attack:value];
            [env3 drawEnvWithAttack:[program env3Attack] decay:[program env3Decay] sustain:[program env3Sustain] release:[program env3Release]]; 
            break;

        case 76:
            //[env3Decay setLit];
            [env3Decay setIntValue:value];
            [progr setEnv3Decay:value];
            [env3 drawEnvWithAttack:[program env3Attack] decay:[program env3Decay] sustain:[program env3Sustain] release:[program env3Release]]; 
            break;

        case 77:
            //[env3Sustain setLit];
            [env3Sustain setIntValue:value];
            [progr setEnv3Sustain:value];
            [env3 drawEnvWithAttack:[program env3Attack] decay:[program env3Decay] sustain:[program env3Sustain] release:[program env3Release]]; 
            break;

        case 78:
            //[env3Release setLit];
            [env3Release setIntValue:value];
            [progr setEnv3Release:value];
            [env3 drawEnvWithAttack:[program env3Attack] decay:[program env3Decay] sustain:[program env3Sustain] release:[program env3Release]]; 
            break;

        case 79:
            //[env3Velocity setLit];
            [env3Velocity setIntValue:value];
            [progr setEnv3Velocity:value];
            
            break;

        case 74:
            //[env3Delay setLit];
            [env3Delay setIntValue:value];
            [progr setEnv3Delay:value];
            
            break;

        case 114:
            //[env2Attack setLit];
            [env2Attack setIntValue:value];
            [progr setEnv2Attack:value];
            [env2 drawEnvWithAttack:[program env2Attack] decay:[program env2Decay] sustain:[program env2Sustain] release:[program env2Release]]; 
            break;

        case 115:
            //[env2Decay setLit];
            [env2Decay setIntValue:value];
            [progr setEnv2Decay:value];
            [env2 drawEnvWithAttack:[program env2Attack] decay:[program env2Decay] sustain:[program env2Sustain] release:[program env2Release]]; 
            break;

        case 116:
            //[env2Sustain setLit];
            [env2Sustain setIntValue:value];
            [progr setEnv2Sustain:value];
            [env2 drawEnvWithAttack:[program env2Attack] decay:[program env2Decay] sustain:[program env2Sustain] release:[program env2Release]]; 
            break;

        case 117:
            //[env2Release setLit];
            [env2Release setIntValue:value];
            [progr setEnv2Release:value];
            [env2 drawEnvWithAttack:[program env2Attack] decay:[program env2Decay] sustain:[program env2Sustain] release:[program env2Release]]; 
            break;

        case 118:
            //[env2Velocity setLit];
            [env2Velocity setIntValue:value];
            [progr setEnv2Velocity:value];
            
            break;

        case 113:
            //[env2Delay setLit];
            [env2Delay setIntValue:value];
            [progr setEnv2Delay:value];
            
            break;

        case 108:
            //[env1Attack setLit];
            [env1Attack setIntValue:value];
            [progr setEnv1Attack:value];
            [env1 drawEnvWithAttack:[program env1Attack] decay:[program env1Decay] sustain:[program env1Sustain] release:[program env1Release]]; 
            break;

        case 109:
            //[env1Decay setLit];
            [env1Decay setIntValue:value];
            [progr setEnv1Decay:value];
            [env1 drawEnvWithAttack:[program env1Attack] decay:[program env1Decay] sustain:[program env1Sustain] release:[program env1Release]]; 
            break;

        case 110:
            //[env1Sustain setLit];
            [env1Sustain setIntValue:value];
            [progr setEnv1Sustain:value];
            [env1 drawEnvWithAttack:[program env1Attack] decay:[program env1Decay] sustain:[program env1Sustain] release:[program env1Release]]; 
            break;

        case 111:
            //[env1Release setLit];
            [env1Release setIntValue:value];
            [progr setEnv1Release:value];
            [env1 drawEnvWithAttack:[program env1Attack] decay:[program env1Decay] sustain:[program env1Sustain] release:[program env1Release]]; 
            break;

        case 112:
            //[env1Velocity setLit];
            [env1Velocity setIntValue:value];
            [progr setEnv1Velocity:value];
            
            break;

        case 24:
            //[noiseSoften setLit];
            [noiseSoften setIntValue:value];
            [progr setNoiseSoften:value];
            [noise drawNoiseWithSoften:[program noiseSoften]]; 
            break;

        case 104:
            //[filterOverdrive setLit];
            [filterOverdrive setIntValue:value];
            [progr setFilterOverdrive:value];
            
            break;

        case 105:
            //[filterFrequency setLit];
            [filterFrequency setIntValue:value];
            [progr setFilterFrequency:value];
            [filter drawFilter:[program filterType] slope:[program filterDB] frequency:[program filterFrequency] resonance:[program filterResonance] width:[program filterWidth]]; 
            break;

        case 34:
            //[filterTracking setLit];
            [filterTracking setIntValue:value];
            [progr setFilterTracking:value];
            
            break;

        case 106:
            //[filterResonance setLit];
            [filterResonance setIntValue:value];
            [progr setFilterResonance:value];
            [filter drawFilter:[program filterType] slope:[program filterDB] frequency:[program filterFrequency] resonance:[program filterResonance] width:[program filterWidth]]; 
            break;

        case 9:
            //[arpSpeed setLit];
            [arpSpeed setIntValue:value];
            [progr setArpSpeed:value];
            
            break;

        case 3:
            //[arpPattern setLit];
            [arpPattern setIntValue:value];
            [progr setArpPattern:value];
            
            break;

        case 65:
            //[arpLatch setLit];
            [arpLatch setIntValue:value];
            [progr setArpLatch:value];
            
            break;

        case 90:
            //[distortionSend setLit];
            [distortionSend setIntValue:value];
            [progr setDistortionSend:value];
            
            break;

        case 58:
            //[distortionWheel setLit];
            [distortionWheel setIntValue:value];
            [progr setDistortionWheel:value];
            
            break;

        case 10:
            //[panPosition setLit];
            [panPosition setIntValue:value];
            [progr setPanPosition:value];
            
            break;

        case 91:
            //[reverbSend setLit];
            [reverbSend setIntValue:value];
            [progr setReverbSend:value];
            
            break;

        case 84:
            //[reverbWheel setLit];
            [reverbWheel setIntValue:value];
            [progr setReverbWheel:value];
            
            break;

        case 95:
            //[reverbDecay setLit];
            [reverbDecay setIntValue:value];
            [progr setReverbDecay:value];
            
            break;

        case 96:
            //[reverbHfDamp setLit];
            [reverbHfDamp setIntValue:value];
            [progr setReverbHfDamp:value];
            
            break;

        case 93:
            //[chorusSend setLit];
            [chorusSend setIntValue:value];
            [progr setChorusSend:value];
            
            break;

        case 94:
            //[chorusWheel setLit];
            [chorusWheel setIntValue:value];
            [progr setChorusWheel:value];
            
            break;

        case 87:
            //[chorusSpeed setLit];
            [chorusSpeed setIntValue:value];
            [progr setChorusSpeed:value];
            
            break;

        case 88:
            //[chorusModDepth setLit];
            [chorusModDepth setIntValue:value];
            [progr setChorusModDepth:value];
            
            break;

        case 89:
            //[chorusFeedback setLit];
            [chorusFeedback setIntValue:value];
            [progr setChorusFeedback:value];
            
            break;

        case 92:
            //[delaySend setLit];
            [delaySend setIntValue:value];
            [progr setDelaySend:value];
            
            break;

        case 119:
            //[delayWheel setLit];
            [delayWheel setIntValue:value];
            [progr setDelayWheel:value];
            
            break;

        case 101:
            //[delayTime setLit];
            [delayTime setIntValue:value];
            [progr setDelayTime:value];
            
            break;

        case 102:
            //[delayFeedback setLit];
            [delayFeedback setIntValue:value];
            [progr setDelayFeedback:value];
            
            break;

        case 103:
            //[delayHfDamp setLit];
            [delayHfDamp setIntValue:value];
            [progr setDelayHfDamp:value];
            
            break;

        case 8:
            //[configMorph setLit];
            [configMorph setIntValue:value];
            [progr setConfigMorph:value];
            
            break;

        case 20:
            //[osc1PitchEnv2 setLit];
            [osc1PitchEnv2 setIntValue:value];
            [progr setOsc1PitchEnv2:value];
            
            break;

        case 66:
            //[osc1PitchEnv3 setLit];
            [osc1PitchEnv3 setIntValue:value];
            [progr setOsc1PitchEnv3:value];
            
            break;

        case 21:
            //[osc1PitchLfo1 setLit];
            [osc1PitchLfo1 setIntValue:value];
            [progr setOsc1PitchLfo1:value];
            
            break;

        case 61:
            //[osc1SoftenEnv2 setLit];
            [osc1SoftenEnv2 setIntValue:value];
            [progr setOsc1SoftenEnv2:value];
            
            break;

        case 43:
            //[osc1WidthEnv2 setLit];
            [osc1WidthEnv2 setIntValue:value];
            [progr setOsc1WidthEnv2:value];
            
            break;

        case 46:
            //[osc1WidthLfo1 setLit];
            [osc1WidthLfo1 setIntValue:value];
            [progr setOsc1WidthLfo1:value];
            
            break;

        case 69:
            //[osc1WidthLfo2 setLit];
            [osc1WidthLfo2 setIntValue:value];
            [progr setOsc1WidthLfo2:value];
            
            break;

        case 52:
            //[osc1SyncEnv2 setLit];
            [osc1SyncEnv2 setIntValue:value];
            [progr setOsc1SyncEnv2:value];
            
            break;

        case 55:
            //[osc1SyncLfo1 setLit];
            [osc1SyncLfo1 setIntValue:value];
            [progr setOsc1SyncLfo1:value];
            
            break;

        case 25:
            //[osc2PitchEnv2 setLit];
            [osc2PitchEnv2 setIntValue:value];
            [progr setOsc2PitchEnv2:value];
            
            break;

        case 67:
            //[osc2PitchEnv3 setLit];
            [osc2PitchEnv3 setIntValue:value];
            [progr setOsc2PitchEnv3:value];
            
            break;

        case 26:
            //[osc2PitchLfo1 setLit];
            [osc2PitchLfo1 setIntValue:value];
            [progr setOsc2PitchLfo1:value];
            
            break;

        case 62:
            //[osc2SoftenEnv2 setLit];
            [osc2SoftenEnv2 setIntValue:value];
            [progr setOsc2SoftenEnv2:value];
            
            break;

        case 44:
            //[osc2WidthEnv2 setLit];
            [osc2WidthEnv2 setIntValue:value];
            [progr setOsc2WidthEnv2:value];
            
            break;

        case 47:
            //[osc2WidthLfo1 setLit];
            [osc2WidthLfo1 setIntValue:value];
            [progr setOsc2WidthLfo1:value];
            
            break;

        case 70:
            //[osc2WidthLfo2 setLit];
            [osc2WidthLfo2 setIntValue:value];
            [progr setOsc2WidthLfo2:value];
            
            break;

        case 53:
            //[osc2SyncEnv2 setLit];
            [osc2SyncEnv2 setIntValue:value];
            [progr setOsc2SyncEnv2:value];
            
            break;

        case 56:
            //[osc2SyncLfo1 setLit];
            [osc2SyncLfo1 setIntValue:value];
            [progr setOsc2SyncLfo1:value];
            
            break;

        case 40:
            //[osc3PitchEnv2 setLit];
            [osc3PitchEnv2 setIntValue:value];
            [progr setOsc3PitchEnv2:value];
            
            break;

        case 68:
            //[osc3PitchEnv3 setLit];
            [osc3PitchEnv3 setIntValue:value];
            [progr setOsc3PitchEnv3:value];
            
            break;

        case 41:
            //[osc3PitchLfo1 setLit];
            [osc3PitchLfo1 setIntValue:value];
            [progr setOsc3PitchLfo1:value];
            
            break;

        case 63:
            //[osc3SoftenEnv2 setLit];
            [osc3SoftenEnv2 setIntValue:value];
            [progr setOsc3SoftenEnv2:value];
            
            break;

        case 45:
            //[osc3WidthEnv2 setLit];
            [osc3WidthEnv2 setIntValue:value];
            [progr setOsc3WidthEnv2:value];
            
            break;

        case 48:
            //[osc3WidthLfo1 setLit];
            [osc3WidthLfo1 setIntValue:value];
            [progr setOsc3WidthLfo1:value];
            
            break;

        case 71:
            //[osc3WidthLfo2 setLit];
            [osc3WidthLfo2 setIntValue:value];
            [progr setOsc3WidthLfo2:value];
            
            break;

        case 54:
            //[osc3SyncEnv2 setLit];
            [osc3SyncEnv2 setIntValue:value];
            [progr setOsc3SyncEnv2:value];
            
            break;

        case 57:
            //[osc3SyncLfo1 setLit];
            [osc3SyncLfo1 setIntValue:value];
            [progr setOsc3SyncLfo1:value];
            
            break;

        case 36:
            //[osc1MixEnv2 setLit];
            [osc1MixEnv2 setIntValue:value];
            [progr setOsc1MixEnv2:value];
            
            break;

        case 37:
            //[osc2MixEnv2 setLit];
            [osc2MixEnv2 setIntValue:value];
            [progr setOsc2MixEnv2:value];
            
            break;

        case 38:
            //[osc3MixEnv2 setLit];
            [osc3MixEnv2 setIntValue:value];
            [progr setOsc3MixEnv2:value];
            
            break;

        case 107:
            //[filterFrequencyEnv2 setLit];
            [filterFrequencyEnv2 setIntValue:value];
            [progr setFilterFrequencyEnv2:value];
            
            break;

        case 59:
            //[filterFrequencyEnv3 setLit];
            [filterFrequencyEnv3 setIntValue:value];
            [progr setFilterFrequencyEnv3:value];
            
            break;

        case 60:
            //[filterFrequencyLfo1 setLit];
            [filterFrequencyLfo1 setIntValue:value];
            [progr setFilterFrequencyLfo1:value];
            
            break;

        case 35:
            //[filterFrequencyLfo2 setLit];
            [filterFrequencyLfo2 setIntValue:value];
            [progr setFilterFrequencyLfo2:value];
            
            break;

        case 72:
            //[filterResonanceEnv2 setLit];
            [filterResonanceEnv2 setIntValue:value];
            [progr setFilterResonanceEnv2:value];
            
            break;

        case 85:
            //[filterResonanceEnv3 setLit];
            [filterResonanceEnv3 setIntValue:value];
            [progr setFilterResonanceEnv3:value];
            
            break;

        case 73:
            //[filterResonanceLfo1 setLit];
            [filterResonanceLfo1 setIntValue:value];
            [progr setFilterResonanceLfo1:value];
            
            break;

        case 86:
            //[filterResonanceLfo2 setLit];
            [filterResonanceLfo2 setIntValue:value];
            [progr setFilterResonanceLfo2:value];
            
            break;

        case 80:
            //[lfo1Env3SpeedMod setLit];
            [lfo1Env3SpeedMod setIntValue:value];
            [progr setLfo1Env3SpeedMod:value];
            
            break;

        case 81:
            //[lfo2Env3SpeedMod setLit];
            [lfo2Env3SpeedMod setIntValue:value];
            [progr setLfo2Env3SpeedMod:value];
            
            break;

        case 39:
            //[noiseMixEnv2 setLit];
            [noiseMixEnv2 setIntValue:value];
            [progr setNoiseMixEnv2:value];
            
            break;

