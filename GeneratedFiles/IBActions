-(IBAction)osc1PitchIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1Pitch flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=17;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1Pitch:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1Pitch %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc1Pitch"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1Pitch"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1Pitch"];
    [self initAll];
    
}
-(IBAction)osc2PitchIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2Pitch flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=33;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2Pitch:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2Pitch %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc2Pitch"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2Pitch"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2Pitch"];
    [self initAll];
    
}
-(IBAction)osc3PitchIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3Pitch flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=49;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3Pitch:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3Pitch %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc3Pitch"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3Pitch"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3Pitch"];
    [self initAll];
    
}
-(IBAction)osc1FormantWidthIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1FormantWidth flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=75;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1FormantWidth:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1FormantWidth %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc1FormantWidth"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1FormantWidth"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1FormantWidth"];
    [self initAll];
    
}
-(IBAction)osc2FormantWidthIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2FormantWidth flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=76;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2FormantWidth:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2FormantWidth %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc2FormantWidth"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2FormantWidth"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2FormantWidth"];
    [self initAll];
    
}
-(IBAction)osc3FormantWidthIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3FormantWidth flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=77;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3FormantWidth:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3FormantWidth %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc3FormantWidth"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3FormantWidth"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3FormantWidth"];
    [self initAll];
    
}
-(IBAction)osc1SyncKeyFollowIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1SyncKeyFollow flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=78;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1SyncKeyFollow:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1SyncKeyFollow %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc1SyncKeyFollow"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1SyncKeyFollow"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1SyncKeyFollow"];
    [self initAll];
    
}
-(IBAction)osc2SyncKeyFollowIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2SyncKeyFollow flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=79;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2SyncKeyFollow:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2SyncKeyFollow %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc2SyncKeyFollow"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2SyncKeyFollow"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2SyncKeyFollow"];
    [self initAll];
    
}
-(IBAction)osc3SyncKeyFollowIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3SyncKeyFollow flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=80;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3SyncKeyFollow:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3SyncKeyFollow %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc3SyncKeyFollow"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3SyncKeyFollow"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3SyncKeyFollow"];
    [self initAll];
    
}
-(IBAction)osc1SyncSkewIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1SyncSkew flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=81;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1SyncSkew:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1SyncSkew %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc1SyncSkew"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1SyncSkew"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1SyncSkew"];
    [self initAll];
    
}
-(IBAction)osc2SyncSkewIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2SyncSkew flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=82;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2SyncSkew:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2SyncSkew %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc2SyncSkew"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2SyncSkew"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2SyncSkew"];
    [self initAll];
    
}
-(IBAction)osc3SyncSkewIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3SyncSkew flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=83;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3SyncSkew:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3SyncSkew %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc3SyncSkew"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3SyncSkew"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3SyncSkew"];
    [self initAll];
    
}
-(IBAction)combFrequencyIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[combFrequency flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=95;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setCombFrequency:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ncombFrequency %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"combFrequency"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"combFrequency"])
         //[self setAllUnlit];
    //[previousSlider setString:@"combFrequency"];
    [self initAll];
    
}
-(IBAction)combBoostIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[combBoost flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=96;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setCombBoost:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ncombBoost %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"combBoost"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"combBoost"])
         //[self setAllUnlit];
    //[previousSlider setString:@"combBoost"];
    [self initAll];
    
}
-(IBAction)panDryLevelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[panDryLevel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=97;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPanDryLevel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npanDryLevel %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"panDryLevel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"panDryLevel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"panDryLevel"];
    [self initAll];
    
}
-(IBAction)panSpeedIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[panSpeed flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=98;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPanSpeed:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npanSpeed %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"panSpeed"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"panSpeed"])
         //[self setAllUnlit];
    //[previousSlider setString:@"panSpeed"];
    [self initAll];
    
}
-(IBAction)panDepthIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[panDepth flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=99;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPanDepth:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npanDepth %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"panDepth"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"panDepth"])
         //[self setAllUnlit];
    //[previousSlider setString:@"panDepth"];
    [self initAll];
    
}
-(IBAction)delayStereoWidthIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[delayStereoWidth flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=101;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setDelayStereoWidth:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ndelayStereoWidth %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"delayStereoWidth"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"delayStereoWidth"])
         //[self setAllUnlit];
    //[previousSlider setString:@"delayStereoWidth"];
    [self initAll];
    
}
-(IBAction)vocoderBalanceIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[vocoderBalance flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=102;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setVocoderBalance:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nvocoderBalance %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"vocoderBalance"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"vocoderBalance"])
         //[self setAllUnlit];
    //[previousSlider setString:@"vocoderBalance"];
    [self initAll];
    
}
-(IBAction)eqTrebleIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[eqTreble flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=107;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setEqTreble:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\neqTreble %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"eqTreble"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"eqTreble"])
         //[self setAllUnlit];
    //[previousSlider setString:@"eqTreble"];
    [self initAll];
    
}
-(IBAction)eqBassIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[eqBass flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=108;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setEqBass:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\neqBass %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"eqBass"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"eqBass"])
         //[self setAllUnlit];
    //[previousSlider setString:@"eqBass"];
    [self initAll];
    
}
-(IBAction)partSemiDetuneIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[partSemiDetune flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=111;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartSemiDetune:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartSemiDetune %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"partSemiDetune"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"partSemiDetune"])
         //[self setAllUnlit];
    //[previousSlider setString:@"partSemiDetune"];
    [self initAll];
    
}
-(IBAction)partDetuneIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[partDetune flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=112;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartDetune:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartDetune %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"partDetune"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"partDetune"])
         //[self setAllUnlit];
    //[previousSlider setString:@"partDetune"];
    [self initAll];
    
}
-(IBAction)partRangeHighIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[partRangeHigh flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=114;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartRangeHigh:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartRangeHigh %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"partRangeHigh"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"partRangeHigh"])
         //[self setAllUnlit];
    //[previousSlider setString:@"partRangeHigh"];
    [self initAll];
    
}
-(IBAction)partRangeLowIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[partRangeLow flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=115;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartRangeLow:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartRangeLow %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"partRangeLow"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"partRangeLow"])
         //[self setAllUnlit];
    //[previousSlider setString:@"partRangeLow"];
    [self initAll];
    
}
-(IBAction)masterTuneIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[masterTune flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=116;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setMasterTune:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nmasterTune %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"masterTune"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"masterTune"])
         //[self setAllUnlit];
    //[previousSlider setString:@"masterTune"];
    [self initAll];
    
}
-(IBAction)breathControlRemapIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[breathControlRemap flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=117;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setBreathControlRemap:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nbreathControlRemap %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"breathControlRemap"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"breathControlRemap"])
         //[self setAllUnlit];
    //[previousSlider setString:@"breathControlRemap"];
    [self initAll];
    
}
-(IBAction)arpTransposeMidiIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[arpTransposeMidi flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=118;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpTransposeMidi:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpTransposeMidi %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"arpTransposeMidi"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"arpTransposeMidi"])
         //[self setAllUnlit];
    //[previousSlider setString:@"arpTransposeMidi"];
    [self initAll];
    
}
-(IBAction)arpTransposeRefIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[arpTransposeRef flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=119;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpTransposeRef:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpTransposeRef %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"arpTransposeRef"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"arpTransposeRef"])
         //[self setAllUnlit];
    //[previousSlider setString:@"arpTransposeRef"];
    [self initAll];
    
}
-(IBAction)programMapEditLocIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[programMapEditLoc flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=120;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setProgramMapEditLoc:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nprogramMapEditLoc %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"programMapEditLoc"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"programMapEditLoc"])
         //[self setAllUnlit];
    //[previousSlider setString:@"programMapEditLoc"];
    [self initAll];
    
}
-(IBAction)programMapProgramIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[programMapProgram flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=121;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setProgramMapProgram:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nprogramMapProgram %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"programMapProgram"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"programMapProgram"])
         //[self setAllUnlit];
    //[previousSlider setString:@"programMapProgram"];
    [self initAll];
    
}
-(IBAction)arpUserPatternEditLocIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[arpUserPatternEditLoc flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=122;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpUserPatternEditLoc:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpUserPatternEditLoc %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"arpUserPatternEditLoc"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"arpUserPatternEditLoc"])
         //[self setAllUnlit];
    //[previousSlider setString:@"arpUserPatternEditLoc"];
    [self initAll];
    
}
-(IBAction)arpUserPatternStepIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[arpUserPatternStep flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=123;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpUserPatternStep:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpUserPatternStep %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"arpUserPatternStep"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"arpUserPatternStep"])
         //[self setAllUnlit];
    //[previousSlider setString:@"arpUserPatternStep"];
    [self initAll];
    
}
-(IBAction)arpUserPatternNoteIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[arpUserPatternNote flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=124;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpUserPatternNote:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpUserPatternNote %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"arpUserPatternNote"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"arpUserPatternNote"])
         //[self setAllUnlit];
    //[previousSlider setString:@"arpUserPatternNote"];
    [self initAll];
    
}
-(IBAction)arpUserPatternVelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[arpUserPatternVel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=125;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpUserPatternVel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpUserPatternVel %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"arpUserPatternVel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"arpUserPatternVel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"arpUserPatternVel"];
    [self initAll];
    
}
-(IBAction)arpUserPatternStepsIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[arpUserPatternSteps flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=126;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpUserPatternSteps:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpUserPatternSteps %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"arpUserPatternSteps"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"arpUserPatternSteps"])
         //[self setAllUnlit];
    //[previousSlider setString:@"arpUserPatternSteps"];
    [self initAll];
    
}
-(IBAction)filterQNormIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterQNorm flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=127;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFilterQNorm:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterQNorm %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"filterQNorm"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterQNorm"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterQNorm"];
    [self initAll];
    
}
-(IBAction)osc1SemiIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1Semi flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=0;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+45;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1Semi:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1Semi %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc1Semi"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1Semi"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1Semi"];
    [self initAll];
    [osc1PitchText setIntValue:([program osc1Oct]-2)*12+[program osc1Semi]-12]; 
}
-(IBAction)osc2SemiIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2Semi flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=0;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+70;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2Semi:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2Semi %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc2Semi"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2Semi"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2Semi"];
    [self initAll];
    [osc2PitchText setIntValue:([program osc2Oct]-2)*12+[program osc2Semi]-12]; 
}
-(IBAction)osc3SemiIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3Semi flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=0;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+95;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3Semi:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3Semi %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc3Semi"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3Semi"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3Semi"];
    [self initAll];
    [osc3PitchText setIntValue:([program osc3Oct]-2)*12+[program osc3Semi]-12]; 
}
-(IBAction)breathSensIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[breathSens flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setBreathSens:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nbreathSens %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"breathSens"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"breathSens"])
         //[self setAllUnlit];
    //[previousSlider setString:@"breathSens"];
    [self initAll];
    
}
-(IBAction)osc1PitchbendRangeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1PitchbendRange flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=84;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1PitchbendRange:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1PitchbendRange %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc1PitchbendRange"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1PitchbendRange"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1PitchbendRange"];
    [self initAll];
    
}
-(IBAction)osc2PitchbendRangeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2PitchbendRange flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=84;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+25;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2PitchbendRange:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2PitchbendRange %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc2PitchbendRange"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2PitchbendRange"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2PitchbendRange"];
    [self initAll];
    
}
-(IBAction)osc3PitchbendRangeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3PitchbendRange flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=84;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+50;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3PitchbendRange:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3PitchbendRange %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc3PitchbendRange"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3PitchbendRange"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3PitchbendRange"];
    [self initAll];
    
}
-(IBAction)input1TrimIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[input1Trim flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=100;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+37;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setInput1Trim:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ninput1Trim %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"input1Trim"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"input1Trim"])
         //[self setAllUnlit];
    //[previousSlider setString:@"input1Trim"];
    [self initAll];
    
}
-(IBAction)input2TrimIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[input2Trim flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=100;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+58;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setInput2Trim:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ninput2Trim %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"input2Trim"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"input2Trim"])
         //[self setAllUnlit];
    //[previousSlider setString:@"input2Trim"];
    [self initAll];
    
}
-(IBAction)filterWidthIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterWidth flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=100;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+102;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFilterWidth:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterWidth %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"filterWidth"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterWidth"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterWidth"];
    [self initAll];
    [filter drawFilter:[program filterType] slope:[program filterDB] frequency:[program filterFrequency] resonance:[program filterResonance] width:[program filterWidth]]; 
}
-(IBAction)vocoderSibilanceLevelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[vocoderSibilanceLevel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+96;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setVocoderSibilanceLevel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nvocoderSibilanceLevel %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"vocoderSibilanceLevel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"vocoderSibilanceLevel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"vocoderSibilanceLevel"];
    [self initAll];
    
}
-(IBAction)vocoderWidthIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[vocoderWidth flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setVocoderWidth:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nvocoderWidth %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"vocoderWidth"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"vocoderWidth"])
         //[self setAllUnlit];
    //[previousSlider setString:@"vocoderWidth"];
    [self initAll];
    
}
-(IBAction)osc1PitchLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1PitchLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=2;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1PitchLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1PitchLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1PitchLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1PitchLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1PitchLfo2"];
    [self initAll];
    
}
-(IBAction)osc1PitchWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1PitchWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=3;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1PitchWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1PitchWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1PitchWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1PitchWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1PitchWheel"];
    [self initAll];
    
}
-(IBAction)osc1WidthEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1WidthEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=4;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1WidthEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1WidthEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1WidthEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1WidthEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1WidthEnv3"];
    [self initAll];
    
}
-(IBAction)osc1WidthWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1WidthWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=5;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1WidthWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1WidthWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1WidthWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1WidthWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1WidthWheel"];
    [self initAll];
    
}
-(IBAction)osc1SyncEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1SyncEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=6;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1SyncEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1SyncEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1SyncEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1SyncEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1SyncEnv3"];
    [self initAll];
    
}
-(IBAction)osc1SyncLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1SyncLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=7;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1SyncLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1SyncLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1SyncLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1SyncLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1SyncLfo2"];
    [self initAll];
    
}
-(IBAction)osc1SyncWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1SyncWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=8;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1SyncWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1SyncWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1SyncWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1SyncWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1SyncWheel"];
    [self initAll];
    
}
-(IBAction)osc1SoftenEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1SoftenEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=9;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1SoftenEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1SoftenEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1SoftenEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1SoftenEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1SoftenEnv3"];
    [self initAll];
    
}
-(IBAction)osc1SoftenLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1SoftenLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=10;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1SoftenLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1SoftenLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1SoftenLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1SoftenLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1SoftenLfo1"];
    [self initAll];
    
}
-(IBAction)osc1SoftenLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1SoftenLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=11;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1SoftenLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1SoftenLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1SoftenLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1SoftenLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1SoftenLfo2"];
    [self initAll];
    
}
-(IBAction)osc1SoftenWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1SoftenWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=12;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1SoftenWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1SoftenWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1SoftenWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1SoftenWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1SoftenWheel"];
    [self initAll];
    
}
-(IBAction)osc1MixEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1MixEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=13;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1MixEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1MixEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1MixEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1MixEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1MixEnv3"];
    [self initAll];
    
}
-(IBAction)osc1MixLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1MixLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=14;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1MixLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1MixLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1MixLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1MixLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1MixLfo1"];
    [self initAll];
    
}
-(IBAction)osc1MixLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1MixLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=15;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1MixLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1MixLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1MixLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1MixLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1MixLfo2"];
    [self initAll];
    
}
-(IBAction)osc1MixWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1MixWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=16;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1MixWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1MixWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1MixWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1MixWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1MixWheel"];
    [self initAll];
    
}
-(IBAction)osc2PitchLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2PitchLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=18;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2PitchLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2PitchLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2PitchLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2PitchLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2PitchLfo2"];
    [self initAll];
    
}
-(IBAction)osc2PitchWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2PitchWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=19;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2PitchWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2PitchWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2PitchWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2PitchWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2PitchWheel"];
    [self initAll];
    
}
-(IBAction)osc2WidthEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2WidthEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=20;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2WidthEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2WidthEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2WidthEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2WidthEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2WidthEnv3"];
    [self initAll];
    
}
-(IBAction)osc2WidthWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2WidthWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=21;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2WidthWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2WidthWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2WidthWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2WidthWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2WidthWheel"];
    [self initAll];
    
}
-(IBAction)osc2SyncEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2SyncEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=22;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2SyncEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2SyncEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2SyncEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2SyncEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2SyncEnv3"];
    [self initAll];
    
}
-(IBAction)osc2SyncLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2SyncLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=23;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2SyncLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2SyncLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2SyncLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2SyncLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2SyncLfo2"];
    [self initAll];
    
}
-(IBAction)osc2SyncWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2SyncWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=24;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2SyncWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2SyncWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2SyncWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2SyncWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2SyncWheel"];
    [self initAll];
    
}
-(IBAction)osc2SoftenEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2SoftenEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=25;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2SoftenEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2SoftenEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2SoftenEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2SoftenEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2SoftenEnv3"];
    [self initAll];
    
}
-(IBAction)osc2SoftenLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2SoftenLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=26;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2SoftenLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2SoftenLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2SoftenLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2SoftenLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2SoftenLfo1"];
    [self initAll];
    
}
-(IBAction)osc2SoftenLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2SoftenLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=27;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2SoftenLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2SoftenLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2SoftenLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2SoftenLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2SoftenLfo2"];
    [self initAll];
    
}
-(IBAction)osc2SoftenWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2SoftenWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=28;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2SoftenWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2SoftenWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2SoftenWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2SoftenWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2SoftenWheel"];
    [self initAll];
    
}
-(IBAction)osc2MixEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2MixEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=29;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2MixEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2MixEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2MixEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2MixEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2MixEnv3"];
    [self initAll];
    
}
-(IBAction)osc2MixLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2MixLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=30;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2MixLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2MixLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2MixLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2MixLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2MixLfo1"];
    [self initAll];
    
}
-(IBAction)osc2MixLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2MixLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=31;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2MixLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2MixLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2MixLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2MixLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2MixLfo2"];
    [self initAll];
    
}
-(IBAction)osc2MixWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2MixWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=32;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2MixWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2MixWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2MixWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2MixWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2MixWheel"];
    [self initAll];
    
}
-(IBAction)osc3PitchLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3PitchLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=34;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3PitchLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3PitchLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3PitchLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3PitchLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3PitchLfo2"];
    [self initAll];
    
}
-(IBAction)osc3PitchWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3PitchWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=35;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3PitchWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3PitchWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3PitchWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3PitchWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3PitchWheel"];
    [self initAll];
    
}
-(IBAction)osc3WidthEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3WidthEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=36;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3WidthEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3WidthEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3WidthEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3WidthEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3WidthEnv3"];
    [self initAll];
    
}
-(IBAction)osc3WidthWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3WidthWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=37;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3WidthWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3WidthWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3WidthWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3WidthWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3WidthWheel"];
    [self initAll];
    
}
-(IBAction)osc3SyncEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3SyncEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=38;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3SyncEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3SyncEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3SyncEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3SyncEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3SyncEnv3"];
    [self initAll];
    
}
-(IBAction)osc3SyncLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3SyncLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=39;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3SyncLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3SyncLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3SyncLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3SyncLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3SyncLfo2"];
    [self initAll];
    
}
-(IBAction)osc3SyncWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3SyncWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=40;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3SyncWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3SyncWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3SyncWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3SyncWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3SyncWheel"];
    [self initAll];
    
}
-(IBAction)osc3SoftenEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3SoftenEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=41;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3SoftenEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3SoftenEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3SoftenEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3SoftenEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3SoftenEnv3"];
    [self initAll];
    
}
-(IBAction)osc3SoftenLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3SoftenLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=42;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3SoftenLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3SoftenLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3SoftenLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3SoftenLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3SoftenLfo1"];
    [self initAll];
    
}
-(IBAction)osc3SoftenLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3SoftenLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=43;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3SoftenLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3SoftenLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3SoftenLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3SoftenLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3SoftenLfo2"];
    [self initAll];
    
}
-(IBAction)osc3SoftenWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3SoftenWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=44;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3SoftenWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3SoftenWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3SoftenWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3SoftenWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3SoftenWheel"];
    [self initAll];
    
}
-(IBAction)osc3MixEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3MixEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=45;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3MixEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3MixEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3MixEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3MixEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3MixEnv3"];
    [self initAll];
    
}
-(IBAction)osc3MixLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3MixLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=46;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3MixLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3MixLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3MixLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3MixLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3MixLfo1"];
    [self initAll];
    
}
-(IBAction)osc3MixLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3MixLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=47;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3MixLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3MixLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3MixLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3MixLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3MixLfo2"];
    [self initAll];
    
}
-(IBAction)osc3MixWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3MixWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=48;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3MixWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3MixWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3MixWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3MixWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3MixWheel"];
    [self initAll];
    
}
-(IBAction)ringMod13MixEnv2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[ringMod13MixEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=50;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setRingMod13MixEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nringMod13MixEnv2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"ringMod13MixEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"ringMod13MixEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"ringMod13MixEnv2"];
    [self initAll];
    
}
-(IBAction)ringMod13MixEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[ringMod13MixEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=51;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setRingMod13MixEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nringMod13MixEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"ringMod13MixEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"ringMod13MixEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"ringMod13MixEnv3"];
    [self initAll];
    
}
-(IBAction)ringMod13MixLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[ringMod13MixLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=52;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setRingMod13MixLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nringMod13MixLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"ringMod13MixLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"ringMod13MixLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"ringMod13MixLfo1"];
    [self initAll];
    
}
-(IBAction)ringMod13MixLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[ringMod13MixLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=53;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setRingMod13MixLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nringMod13MixLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"ringMod13MixLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"ringMod13MixLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"ringMod13MixLfo2"];
    [self initAll];
    
}
-(IBAction)ringMod13MixWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[ringMod13MixWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=54;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setRingMod13MixWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nringMod13MixWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"ringMod13MixWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"ringMod13MixWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"ringMod13MixWheel"];
    [self initAll];
    
}
-(IBAction)ringMod23MixEnv2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[ringMod23MixEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=55;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setRingMod23MixEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nringMod23MixEnv2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"ringMod23MixEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"ringMod23MixEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"ringMod23MixEnv2"];
    [self initAll];
    
}
-(IBAction)ringMod23MixEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[ringMod23MixEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=56;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setRingMod23MixEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nringMod23MixEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"ringMod23MixEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"ringMod23MixEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"ringMod23MixEnv3"];
    [self initAll];
    
}
-(IBAction)ringMod23MixLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[ringMod23MixLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=57;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setRingMod23MixLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nringMod23MixLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"ringMod23MixLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"ringMod23MixLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"ringMod23MixLfo1"];
    [self initAll];
    
}
-(IBAction)ringMod23MixLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[ringMod23MixLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=58;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setRingMod23MixLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nringMod23MixLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"ringMod23MixLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"ringMod23MixLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"ringMod23MixLfo2"];
    [self initAll];
    
}
-(IBAction)ringMod23MixWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[ringMod23MixWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=59;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setRingMod23MixWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nringMod23MixWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"ringMod23MixWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"ringMod23MixWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"ringMod23MixWheel"];
    [self initAll];
    
}
-(IBAction)noiseSoftenEnv2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[noiseSoftenEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=60;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setNoiseSoftenEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nnoiseSoftenEnv2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"noiseSoftenEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"noiseSoftenEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"noiseSoftenEnv2"];
    [self initAll];
    
}
-(IBAction)noiseSoftenEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[noiseSoftenEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=61;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setNoiseSoftenEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nnoiseSoftenEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"noiseSoftenEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"noiseSoftenEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"noiseSoftenEnv3"];
    [self initAll];
    
}
-(IBAction)noiseSoftenLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[noiseSoftenLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=62;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setNoiseSoftenLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nnoiseSoftenLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"noiseSoftenLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"noiseSoftenLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"noiseSoftenLfo1"];
    [self initAll];
    
}
-(IBAction)noiseSoftenLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[noiseSoftenLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=63;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setNoiseSoftenLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nnoiseSoftenLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"noiseSoftenLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"noiseSoftenLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"noiseSoftenLfo2"];
    [self initAll];
    
}
-(IBAction)noiseSoftenWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[noiseSoftenWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=64;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setNoiseSoftenWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nnoiseSoftenWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"noiseSoftenWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"noiseSoftenWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"noiseSoftenWheel"];
    [self initAll];
    
}
-(IBAction)noiseMixEnv3In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[noiseMixEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=65;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setNoiseMixEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nnoiseMixEnv3 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"noiseMixEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"noiseMixEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"noiseMixEnv3"];
    [self initAll];
    
}
-(IBAction)noiseMixLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[noiseMixLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=66;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setNoiseMixLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nnoiseMixLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"noiseMixLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"noiseMixLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"noiseMixLfo1"];
    [self initAll];
    
}
-(IBAction)noiseMixLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[noiseMixLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=67;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setNoiseMixLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nnoiseMixLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"noiseMixLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"noiseMixLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"noiseMixLfo2"];
    [self initAll];
    
}
-(IBAction)noiseMixWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[noiseMixWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=68;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setNoiseMixWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nnoiseMixWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"noiseMixWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"noiseMixWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"noiseMixWheel"];
    [self initAll];
    
}
-(IBAction)osc1WheelLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1WheelLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=69;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1WheelLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1WheelLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1WheelLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1WheelLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1WheelLfo1"];
    [self initAll];
    
}
-(IBAction)osc2WheelLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2WheelLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=70;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2WheelLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2WheelLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2WheelLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2WheelLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2WheelLfo1"];
    [self initAll];
    
}
-(IBAction)osc3WheelLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3WheelLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=71;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3WheelLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3WheelLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3WheelLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3WheelLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3WheelLfo1"];
    [self initAll];
    
}
-(IBAction)osc1AfterTouchLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1AfterTouchLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=72;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1AfterTouchLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1AfterTouchLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1AfterTouchLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1AfterTouchLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1AfterTouchLfo1"];
    [self initAll];
    
}
-(IBAction)osc2AfterTouchLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2AfterTouchLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=73;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2AfterTouchLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2AfterTouchLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2AfterTouchLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2AfterTouchLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2AfterTouchLfo1"];
    [self initAll];
    
}
-(IBAction)osc3AfterTouchLfo1In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3AfterTouchLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=74;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3AfterTouchLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3AfterTouchLfo1 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3AfterTouchLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3AfterTouchLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3AfterTouchLfo1"];
    [self initAll];
    
}
-(IBAction)lfo1AfterTouchSpeedModIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[lfo1AfterTouchSpeedMod flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=85;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo1AfterTouchSpeedMod:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo1AfterTouchSpeedMod %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"lfo1AfterTouchSpeedMod"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"lfo1AfterTouchSpeedMod"])
         //[self setAllUnlit];
    //[previousSlider setString:@"lfo1AfterTouchSpeedMod"];
    [self initAll];
    
}
-(IBAction)lfo2AfterTouchSpeedModIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[lfo2AfterTouchSpeedMod flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=86;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo2AfterTouchSpeedMod:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo2AfterTouchSpeedMod %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"lfo2AfterTouchSpeedMod"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"lfo2AfterTouchSpeedMod"])
         //[self setAllUnlit];
    //[previousSlider setString:@"lfo2AfterTouchSpeedMod"];
    [self initAll];
    
}
-(IBAction)filterFrequencyWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterFrequencyWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=87;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFilterFrequencyWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterFrequencyWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterFrequencyWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterFrequencyWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterFrequencyWheel"];
    [self initAll];
    
}
-(IBAction)filterResonanceWheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterResonanceWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=88;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFilterResonanceWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterResonanceWheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterResonanceWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterResonanceWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterResonanceWheel"];
    [self initAll];
    
}
-(IBAction)filterFrequencyWheelLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterFrequencyWheelLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=89;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFilterFrequencyWheelLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterFrequencyWheelLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterFrequencyWheelLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterFrequencyWheelLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterFrequencyWheelLfo2"];
    [self initAll];
    
}
-(IBAction)filterResonanceWheelLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterResonanceWheelLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=90;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFilterResonanceWheelLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterResonanceWheelLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterResonanceWheelLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterResonanceWheelLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterResonanceWheelLfo2"];
    [self initAll];
    
}
-(IBAction)filterFrequencyAfterTouchLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterFrequencyAfterTouchLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=91;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFilterFrequencyAfterTouchLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterFrequencyAfterTouchLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterFrequencyAfterTouchLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterFrequencyAfterTouchLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterFrequencyAfterTouchLfo2"];
    [self initAll];
    
}
-(IBAction)filterResonanceAfterTouchLfo2In:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterResonanceAfterTouchLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=92;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFilterResonanceAfterTouchLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterResonanceAfterTouchLfo2 %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterResonanceAfterTouchLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterResonanceAfterTouchLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterResonanceAfterTouchLfo2"];
    [self initAll];
    
}
-(IBAction)filterFrequencyAfterTouchIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterFrequencyAfterTouch flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=93;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFilterFrequencyAfterTouch:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterFrequencyAfterTouch %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterFrequencyAfterTouch"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterFrequencyAfterTouch"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterFrequencyAfterTouch"];
    [self initAll];
    
}
-(IBAction)filterResonanceAfterTouchIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterResonanceAfterTouch flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=94;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFilterResonanceAfterTouch:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterResonanceAfterTouch %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterResonanceAfterTouch"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterResonanceAfterTouch"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterResonanceAfterTouch"];
    [self initAll];
    
}
-(IBAction)lfo1WheelSpeedModIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[lfo1WheelSpeedMod flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=103;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo1WheelSpeedMod:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo1WheelSpeedMod %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"lfo1WheelSpeedMod"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"lfo1WheelSpeedMod"])
         //[self setAllUnlit];
    //[previousSlider setString:@"lfo1WheelSpeedMod"];
    [self initAll];
    
}
-(IBAction)lfo2WheelSpeedModIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[lfo2WheelSpeedMod flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=104;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo2WheelSpeedMod:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo2WheelSpeedMod %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"lfo2WheelSpeedMod"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"lfo2WheelSpeedMod"])
         //[self setAllUnlit];
    //[previousSlider setString:@"lfo2WheelSpeedMod"];
    [self initAll];
    
}
-(IBAction)env1WheelIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env1Wheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=105;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setEnv1Wheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv1Wheel %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"env1Wheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env1Wheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env1Wheel"];
    [self initAll];
    
}
-(IBAction)env1AfterTouchIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env1AfterTouch flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=106;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[sender intValue];
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setEnv1AfterTouch:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv1AfterTouch %d",midiMessage[5]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"env1AfterTouch"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env1AfterTouch"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env1AfterTouch"];
    [self initAll];
    
}
-(IBAction)osc1WaveIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=0;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1Wave:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1Wave %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"osc1Wave"];
    [self initAll];
    [osc1 drawWave:[program osc1Wave] soften:[program osc1Soften] pulseWidth:[program osc1Width]]; 
}
-(IBAction)osc2WaveIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=0;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+10;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2Wave:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2Wave %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"osc2Wave"];
    [self initAll];
    [osc2 drawWave:[program osc2Wave] soften:[program osc2Soften] pulseWidth:[program osc2Width]]; 
}
-(IBAction)osc3WaveIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=0;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+20;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3Wave:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3Wave %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"osc3Wave"];
    [self initAll];
    [osc3 drawWave:[program osc3Wave] soften:[program osc3Soften] pulseWidth:[program osc3Width]]; 
}
-(IBAction)osc1OctIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=0;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+30;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc1Oct:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1Oct %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"osc1Oct"];
    [self initAll];
    [osc1PitchText setIntValue:([program osc1Oct]-2)*12+[program osc1Semi]-12]; 
}
-(IBAction)osc2OctIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=0;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+35;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc2Oct:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2Oct %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"osc2Oct"];
    [self initAll];
    [osc2PitchText setIntValue:([program osc2Oct]-2)*12+[program osc2Semi]-12]; 
}
-(IBAction)osc3OctIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=0;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+40;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOsc3Oct:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3Oct %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"osc3Oct"];
    [self initAll];
    [osc3PitchText setIntValue:([program osc3Oct]-2)*12+[program osc3Semi]-12]; 
}
-(IBAction)portamentoTypeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=0;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+120;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPortamentoType:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nportamentoType %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"portamentoType"];
    [self initAll];
    
}
-(IBAction)lfo1DelayTriggerIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=0;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+124;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo1DelayTrigger:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo1DelayTrigger %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"lfo1DelayTrigger"];
    [self initAll];
    
}
-(IBAction)lfo2DelayTriggerIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=0;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+126;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo2DelayTrigger:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo2DelayTrigger %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"lfo2DelayTrigger"];
    [self initAll];
    
}
-(IBAction)filterDBIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFilterDB:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterDB %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"filterDB"];
    [self initAll];
    [filter drawFilter:[program filterType] slope:[program filterDB] frequency:[program filterFrequency] resonance:[program filterResonance] width:[program filterWidth]]; 
}
-(IBAction)filterTypeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+3;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFilterType:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterType %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"filterType"];
    [self initAll];
    [filter drawFilter:[program filterType] slope:[program filterDB] frequency:[program filterFrequency] resonance:[program filterResonance] width:[program filterWidth]]; 
}
-(IBAction)lfo1ShapeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+16;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo1Shape:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo1Shape %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"lfo1Shape"];
    [self initAll];
    [lfo1 drawLFO:[program lfo1Shape]]; 
}
-(IBAction)lfo2ShapeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+21;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo2Shape:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo2Shape %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"lfo2Shape"];
    [self initAll];
    [lfo2 drawLFO:[program lfo2Shape]]; 
}
-(IBAction)lfo1TriggerIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+24;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo1Trigger:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo1Trigger %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"lfo1Trigger"];
    [self initAll];
    
}
-(IBAction)lfo2TriggerIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+26;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo2Trigger:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo2Trigger %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"lfo2Trigger"];
    [self initAll];
    
}
-(IBAction)lfo1RangeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+28;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo1Range:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo1Range %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"lfo1Range"];
    [self initAll];
    
}
-(IBAction)lfo2RangeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+31;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo2Range:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo2Range %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"lfo2Range"];
    [self initAll];
    
}
-(IBAction)env1TriggerIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+34;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setEnv1Trigger:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv1Trigger %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"env1Trigger"];
    [self initAll];
    
}
-(IBAction)env2TriggerIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+36;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setEnv2Trigger:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv2Trigger %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"env2Trigger"];
    [self initAll];
    
}
-(IBAction)env3TriggerIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+38;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setEnv3Trigger:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv3Trigger %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"env3Trigger"];
    [self initAll];
    
}
-(IBAction)glideIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+42;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setGlide:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nglide %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"glide"];
    [self initAll];
    
}
-(IBAction)chorusTypeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+52;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setChorusType:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nchorusType %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"chorusType"];
    [self initAll];
    
}
-(IBAction)panTypeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+55;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPanType:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npanType %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"panType"];
    [self initAll];
    
}
-(IBAction)arpConstPitchIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+70;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpConstPitch:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpConstPitch %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpConstPitch"];
    [self initAll];
    
}
-(IBAction)arpOnIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+72;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpOn:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpOn %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpOn"];
    [self initAll];
    
}
-(IBAction)arpKeyResetIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+74;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpKeyReset:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpKeyReset %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpKeyReset"];
    [self initAll];
    
}
-(IBAction)arpPatternBankIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+76;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpPatternBank:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpPatternBank %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpPatternBank"];
    [self initAll];
    
}
-(IBAction)arpLatchTypeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+79;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpLatchType:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpLatchType %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpLatchType"];
    [self initAll];
    
}
-(IBAction)arpQuantizeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+81;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpQuantize:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpQuantize %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpQuantize"];
    [self initAll];
    
}
-(IBAction)arpVelocityIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+86;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpVelocity:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpVelocity %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpVelocity"];
    [self initAll];
    
}
-(IBAction)arpMuteIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+90;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpMute:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpMute %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpMute"];
    [self initAll];
    
}
-(IBAction)arpRealTimeTransposeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+92;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpRealTimeTranspose:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpRealTimeTranspose %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpRealTimeTranspose"];
    [self initAll];
    
}
-(IBAction)arpUserPatternGateIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+94;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpUserPatternGate:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpUserPatternGate %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpUserPatternGate"];
    [self initAll];
    
}
-(IBAction)partOutputIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+98;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartOutput:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartOutput %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"partOutput"];
    [self initAll];
    
}
-(IBAction)arpOutputIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+102;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpOutput:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpOutput %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpOutput"];
    [self initAll];
    
}
-(IBAction)clockIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+105;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setClock:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nclock %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"clock"];
    [self initAll];
    
}
-(IBAction)programMapBankIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+107;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setProgramMapBank:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nprogramMapBank %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"programMapBank"];
    [self initAll];
    
}
-(IBAction)arpFillinIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=1;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+122;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpFillin:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpFillin %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpFillin"];
    [self initAll];
    
}
-(IBAction)partFxIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=84;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+74;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartFx:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartFx %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"partFx"];
    [self initAll];
    
}
-(IBAction)partSustainModeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=84;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+77;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartSustainMode:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartSustainMode %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"partSustainMode"];
    [self initAll];
    
}
-(IBAction)oscTriggerIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=84;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+84;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setOscTrigger:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\noscTrigger %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"oscTrigger"];
    [self initAll];
    
}
-(IBAction)polyphonyIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=84;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+86;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPolyphony:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npolyphony %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"polyphony"];
    [self initAll];
    
}
-(IBAction)sysexTxOptionIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=84;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+88;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setSysexTxOption:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nsysexTxOption %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"sysexTxOption"];
    [self initAll];
    
}
-(IBAction)delaySyncIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=100;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setDelaySync:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ndelaySync %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"delaySync"];
    [self initAll];
    
}
-(IBAction)arpOctRangeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=109;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+1;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpOctRange:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpOctRange %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpOctRange"];
    [self initAll];
    
}
-(IBAction)arpGateTimeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=109;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+5;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpGateTime:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpGateTime %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpGateTime"];
    [self initAll];
    
}
-(IBAction)sysexRxIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=109;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+66;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setSysexRx:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nsysexRx %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"sysexRx"];
    [self initAll];
    
}
-(IBAction)partVelCurveIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=109;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+80;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartVelCurve:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartVelCurve %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"partVelCurve"];
    [self initAll];
    
}
-(IBAction)delayRatioIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=109;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+96;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setDelayRatio:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ndelayRatio %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"delayRatio"];
    [self initAll];
    
}
-(IBAction)globalMidiIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=109;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+107;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setGlobalMidi:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nglobalMidi %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"globalMidi"];
    [self initAll];
    
}
-(IBAction)partMidiIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=109;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+118;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartMidi:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartMidi %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"partMidi"];
    [self initAll];
    
}
-(IBAction)arpSyncIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=110;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpSync:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpSync %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpSync"];
    [self initAll];
    
}
-(IBAction)globalIncomingProgChangeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=110;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+34;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setGlobalIncomingProgChange:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nglobalIncomingProgChange %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"globalIncomingProgChange"];
    [self initAll];
    
}
-(IBAction)progMapBankIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=110;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+37;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setProgMapBank:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nprogMapBank %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"progMapBank"];
    [self initAll];
    
}
-(IBAction)lfo1SyncIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=110;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+40;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo1Sync:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo1Sync %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"lfo1Sync"];
    [self initAll];
    
}
-(IBAction)globalIncomingContChangeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=110;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+75;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setGlobalIncomingContChange:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nglobalIncomingContChange %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"globalIncomingContChange"];
    [self initAll];
    
}
-(IBAction)partProgChangeFilterIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=110;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+76;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartProgChangeFilter:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartProgChangeFilter %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"partProgChangeFilter"];
    [self initAll];
    
}
-(IBAction)arpOutputRangingIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=110;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+78;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpOutputRanging:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpOutputRanging %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpOutputRanging"];
    [self initAll];
    
}
-(IBAction)lfo2SyncIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=110;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+80;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setLfo2Sync:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo2Sync %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"lfo2Sync"];
    [self initAll];
    
}
-(IBAction)partControlChangeFiltIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=110;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+116;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartControlChangeFilt:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartControlChangeFilt %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"partControlChangeFilt"];
    [self initAll];
    
}
-(IBAction)partPedalIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=110;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+118;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartPedal:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartPedal %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"partPedal"];
    [self initAll];
    
}
-(IBAction)partSustainIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=110;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+126;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartSustain:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartSustain %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"partSustain"];
    [self initAll];
    
}
-(IBAction)partPolyphonyIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+0;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartPolyphony:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartPolyphony %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"partPolyphony"];
    [self initAll];
    
}
-(IBAction)pedalModeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+11;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPedalMode:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npedalMode %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"pedalMode"];
    [self initAll];
    
}
-(IBAction)vocoderSibilanceTypeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+16;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setVocoderSibilanceType:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nvocoderSibilanceType %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"vocoderSibilanceType"];
    [self initAll];
    
}
-(IBAction)vocoderInputIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+18;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setVocoderInput:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nvocoderInput %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"vocoderInput"];
    [self initAll];
    
}
-(IBAction)vocoderInsertIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+28;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setVocoderInsert:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nvocoderInsert %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"vocoderInsert"];
    [self initAll];
    
}
-(IBAction)fxConfigIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+36;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFxConfig:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfxConfig %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"fxConfig"];
    [self initAll];
    
}
-(IBAction)partMuteIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+63;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartMute:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartMute %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"partMute"];
    [self initAll];
    
}
-(IBAction)fxSendIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+71;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setFxSend:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfxSend %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"fxSend"];
    [self initAll];
    
}
-(IBAction)partSelectIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+76;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPartSelect:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npartSelect %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"partSelect"];
    [self initAll];
    
}
-(IBAction)arpEditIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+84;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setArpEdit:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpEdit %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"arpEdit"];
    [self initAll];
    
}
-(IBAction)breathModeIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+89;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setBreathMode:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nbreathMode %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"breathMode"];
    [self initAll];
    
}
-(IBAction)phonesOutputIn:(id)sender
{
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[1]=98;
    midiMessage[2]=113;
    midiMessage[3]=175+channel;
    midiMessage[4]=6;
    midiMessage[5]=[[sender selectedCell] tag]+92;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,0,6,midiMessage);
    [program setPhonesOutput:[sender selectedTag]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nNRPN %d %d %d %d %d %d",midiMessage[0],midiMessage[1],midiMessage[2],midiMessage[3],midiMessage[4],midiMessage[5]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nphonesOutput %d",[[sender selectedCell] tag]]];
    [defaults setInteger:[[sender selectedCell] tag] forKey:@"phonesOutput"];
    [self initAll];
    
}
-(IBAction)bankSelectIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[bankSelect flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=32;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setBankSelect:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nbankSelect %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"bankSelect"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"bankSelect"])
         //[self setAllUnlit];
    //[previousSlider setString:@"bankSelect"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)sustainIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[sustain flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=64;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setSustain:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nsustain %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"sustain"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"sustain"])
         //[self setAllUnlit];
    //[previousSlider setString:@"sustain"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)masterVolumeIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[masterVolume flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=97;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setMasterVolume:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nmasterVolume %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"masterVolume"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"masterVolume"])
         //[self setAllUnlit];
    //[previousSlider setString:@"masterVolume"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)portamentoIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[portamento flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=5;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setPortamento:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nportamento %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"portamento"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"portamento"])
         //[self setAllUnlit];
    //[previousSlider setString:@"portamento"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)osc1FineIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1Fine flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=11;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1Fine:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1Fine %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc1Fine"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1Fine"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1Fine"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [osc1FineText setIntValue:[program osc1Fine]]; 
}
-(IBAction)osc1SoftenIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1Soften flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=13;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1Soften:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1Soften %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc1Soften"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1Soften"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1Soften"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [osc1 drawWave:[program osc1Wave] soften:[program osc1Soften] pulseWidth:[program osc1Width]]; 
}
-(IBAction)osc1WidthIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1Width flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=22;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1Width:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1Width %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc1Width"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1Width"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1Width"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [osc1 drawWave:[program osc1Wave] soften:[program osc1Soften] pulseWidth:[program osc1Width]]; 
}
-(IBAction)osc1SyncIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1Sync flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=49;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1Sync:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1Sync %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc1Sync"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1Sync"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1Sync"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)osc2FineIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2Fine flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=23;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2Fine:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2Fine %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc2Fine"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2Fine"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2Fine"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [osc2FineText setIntValue:[program osc2Fine]]; 
}
-(IBAction)osc2SoftenIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2Soften flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=14;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2Soften:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2Soften %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc2Soften"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2Soften"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2Soften"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [osc2 drawWave:[program osc2Wave] soften:[program osc2Soften] pulseWidth:[program osc2Width]]; 
}
-(IBAction)osc2WidthIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2Width flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=27;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2Width:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2Width %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc2Width"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2Width"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2Width"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [osc2 drawWave:[program osc2Wave] soften:[program osc2Soften] pulseWidth:[program osc2Width]]; 
}
-(IBAction)osc2SyncIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2Sync flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=50;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2Sync:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2Sync %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc2Sync"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2Sync"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2Sync"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)osc3FineIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3Fine flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=12;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3Fine:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3Fine %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc3Fine"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3Fine"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3Fine"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [osc3FineText setIntValue:[program osc3Fine]]; 
}
-(IBAction)osc3SoftenIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3Soften flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=15;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3Soften:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3Soften %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc3Soften"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3Soften"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3Soften"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [osc3 drawWave:[program osc3Wave] soften:[program osc3Soften] pulseWidth:[program osc3Width]]; 
}
-(IBAction)osc3WidthIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3Width flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=42;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3Width:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3Width %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc3Width"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3Width"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3Width"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [osc3 drawWave:[program osc3Wave] soften:[program osc3Soften] pulseWidth:[program osc3Width]]; 
}
-(IBAction)osc3SyncIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3Sync flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=51;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3Sync:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3Sync %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc3Sync"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3Sync"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3Sync"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)osc1MixIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1Mix flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=28;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1Mix:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1Mix %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc1Mix"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1Mix"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1Mix"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)osc2MixIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2Mix flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=29;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2Mix:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2Mix %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc2Mix"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2Mix"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2Mix"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)osc3MixIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3Mix flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=33;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3Mix:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3Mix %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"osc3Mix"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3Mix"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3Mix"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)ring13MixIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[ring13Mix flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=31;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setRing13Mix:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nring13Mix %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"ring13Mix"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"ring13Mix"])
         //[self setAllUnlit];
    //[previousSlider setString:@"ring13Mix"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)ring23MixIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[ring23Mix flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=4;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setRing23Mix:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nring23Mix %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"ring23Mix"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"ring23Mix"])
         //[self setAllUnlit];
    //[previousSlider setString:@"ring23Mix"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)noiseMixIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[noiseMix flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=30;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setNoiseMix:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nnoiseMix %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"noiseMix"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"noiseMix"])
         //[self setAllUnlit];
    //[previousSlider setString:@"noiseMix"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)lfo1DelayIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[lfo1Delay flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=17;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setLfo1Delay:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo1Delay %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"lfo1Delay"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"lfo1Delay"])
         //[self setAllUnlit];
    //[previousSlider setString:@"lfo1Delay"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)lfo1OffsetIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[lfo1Offset flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=82;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setLfo1Offset:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo1Offset %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"lfo1Offset"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"lfo1Offset"])
         //[self setAllUnlit];
    //[previousSlider setString:@"lfo1Offset"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)lfo1SpeedIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[lfo1Speed flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=16;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setLfo1Speed:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo1Speed %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"lfo1Speed"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"lfo1Speed"])
         //[self setAllUnlit];
    //[previousSlider setString:@"lfo1Speed"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)lfo2DelayIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[lfo2Delay flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=19;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setLfo2Delay:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo2Delay %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"lfo2Delay"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"lfo2Delay"])
         //[self setAllUnlit];
    //[previousSlider setString:@"lfo2Delay"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)lfo2OffsetIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[lfo2Offset flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=83;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setLfo2Offset:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo2Offset %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"lfo2Offset"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"lfo2Offset"])
         //[self setAllUnlit];
    //[previousSlider setString:@"lfo2Offset"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)lfo2SpeedIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[lfo2Speed flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=18;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setLfo2Speed:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo2Speed %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"lfo2Speed"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"lfo2Speed"])
         //[self setAllUnlit];
    //[previousSlider setString:@"lfo2Speed"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)env3AttackIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env3Attack flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=75;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv3Attack:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv3Attack %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env3Attack"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env3Attack"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env3Attack"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [env3 drawEnvWithAttack:[program env3Attack] decay:[program env3Decay] sustain:[program env3Sustain] release:[program env3Release]]; 
}
-(IBAction)env3DecayIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env3Decay flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=76;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv3Decay:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv3Decay %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env3Decay"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env3Decay"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env3Decay"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [env3 drawEnvWithAttack:[program env3Attack] decay:[program env3Decay] sustain:[program env3Sustain] release:[program env3Release]]; 
}
-(IBAction)env3SustainIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env3Sustain flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=77;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv3Sustain:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv3Sustain %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env3Sustain"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env3Sustain"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env3Sustain"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [env3 drawEnvWithAttack:[program env3Attack] decay:[program env3Decay] sustain:[program env3Sustain] release:[program env3Release]]; 
}
-(IBAction)env3ReleaseIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env3Release flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=78;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv3Release:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv3Release %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env3Release"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env3Release"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env3Release"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [env3 drawEnvWithAttack:[program env3Attack] decay:[program env3Decay] sustain:[program env3Sustain] release:[program env3Release]]; 
}
-(IBAction)env3VelocityIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env3Velocity flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=79;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv3Velocity:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv3Velocity %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env3Velocity"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env3Velocity"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env3Velocity"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)env3DelayIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env3Delay flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=74;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv3Delay:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv3Delay %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env3Delay"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env3Delay"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env3Delay"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)env2AttackIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env2Attack flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=114;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv2Attack:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv2Attack %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env2Attack"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env2Attack"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env2Attack"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [env2 drawEnvWithAttack:[program env2Attack] decay:[program env2Decay] sustain:[program env2Sustain] release:[program env2Release]]; 
}
-(IBAction)env2DecayIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env2Decay flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=115;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv2Decay:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv2Decay %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env2Decay"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env2Decay"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env2Decay"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [env2 drawEnvWithAttack:[program env2Attack] decay:[program env2Decay] sustain:[program env2Sustain] release:[program env2Release]]; 
}
-(IBAction)env2SustainIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env2Sustain flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=116;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv2Sustain:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv2Sustain %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env2Sustain"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env2Sustain"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env2Sustain"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [env2 drawEnvWithAttack:[program env2Attack] decay:[program env2Decay] sustain:[program env2Sustain] release:[program env2Release]]; 
}
-(IBAction)env2ReleaseIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env2Release flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=117;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv2Release:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv2Release %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env2Release"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env2Release"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env2Release"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [env2 drawEnvWithAttack:[program env2Attack] decay:[program env2Decay] sustain:[program env2Sustain] release:[program env2Release]]; 
}
-(IBAction)env2VelocityIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env2Velocity flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=118;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv2Velocity:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv2Velocity %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env2Velocity"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env2Velocity"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env2Velocity"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)env2DelayIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env2Delay flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=113;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv2Delay:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv2Delay %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env2Delay"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env2Delay"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env2Delay"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)env1AttackIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env1Attack flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=108;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv1Attack:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv1Attack %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env1Attack"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env1Attack"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env1Attack"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [env1 drawEnvWithAttack:[program env1Attack] decay:[program env1Decay] sustain:[program env1Sustain] release:[program env1Release]]; 
}
-(IBAction)env1DecayIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env1Decay flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=109;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv1Decay:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv1Decay %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env1Decay"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env1Decay"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env1Decay"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [env1 drawEnvWithAttack:[program env1Attack] decay:[program env1Decay] sustain:[program env1Sustain] release:[program env1Release]]; 
}
-(IBAction)env1SustainIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env1Sustain flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=110;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv1Sustain:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv1Sustain %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env1Sustain"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env1Sustain"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env1Sustain"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [env1 drawEnvWithAttack:[program env1Attack] decay:[program env1Decay] sustain:[program env1Sustain] release:[program env1Release]]; 
}
-(IBAction)env1ReleaseIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env1Release flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=111;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv1Release:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv1Release %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env1Release"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env1Release"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env1Release"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [env1 drawEnvWithAttack:[program env1Attack] decay:[program env1Decay] sustain:[program env1Sustain] release:[program env1Release]]; 
}
-(IBAction)env1VelocityIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[env1Velocity flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=112;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setEnv1Velocity:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nenv1Velocity %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"env1Velocity"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"env1Velocity"])
         //[self setAllUnlit];
    //[previousSlider setString:@"env1Velocity"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)noiseSoftenIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[noiseSoften flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=24;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setNoiseSoften:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nnoiseSoften %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"noiseSoften"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"noiseSoften"])
         //[self setAllUnlit];
    //[previousSlider setString:@"noiseSoften"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [noise drawNoiseWithSoften:[program noiseSoften]]; 
}
-(IBAction)filterOverdriveIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterOverdrive flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=104;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setFilterOverdrive:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterOverdrive %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"filterOverdrive"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterOverdrive"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterOverdrive"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)filterFrequencyIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterFrequency flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=105;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setFilterFrequency:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterFrequency %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"filterFrequency"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterFrequency"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterFrequency"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [filter drawFilter:[program filterType] slope:[program filterDB] frequency:[program filterFrequency] resonance:[program filterResonance] width:[program filterWidth]]; 
}
-(IBAction)filterTrackingIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterTracking flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=34;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setFilterTracking:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterTracking %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"filterTracking"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterTracking"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterTracking"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)filterResonanceIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterResonance flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=106;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setFilterResonance:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterResonance %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"filterResonance"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterResonance"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterResonance"];
    //[self setAllNeedsDisplay];
    [self initAll];
    [filter drawFilter:[program filterType] slope:[program filterDB] frequency:[program filterFrequency] resonance:[program filterResonance] width:[program filterWidth]]; 
}
-(IBAction)arpSpeedIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[arpSpeed flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=9;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setArpSpeed:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpSpeed %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"arpSpeed"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"arpSpeed"])
         //[self setAllUnlit];
    //[previousSlider setString:@"arpSpeed"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)arpPatternIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[arpPattern flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=3;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setArpPattern:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpPattern %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"arpPattern"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"arpPattern"])
         //[self setAllUnlit];
    //[previousSlider setString:@"arpPattern"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)arpLatchIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[arpLatch flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=65;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setArpLatch:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\narpLatch %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"arpLatch"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"arpLatch"])
         //[self setAllUnlit];
    //[previousSlider setString:@"arpLatch"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)distortionSendIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[distortionSend flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=90;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setDistortionSend:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ndistortionSend %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"distortionSend"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"distortionSend"])
         //[self setAllUnlit];
    //[previousSlider setString:@"distortionSend"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)distortionWheelIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[distortionWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=58;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setDistortionWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ndistortionWheel %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"distortionWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"distortionWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"distortionWheel"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)panPositionIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[panPosition flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=10;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setPanPosition:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\npanPosition %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"panPosition"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"panPosition"])
         //[self setAllUnlit];
    //[previousSlider setString:@"panPosition"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)reverbSendIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[reverbSend flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=91;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setReverbSend:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nreverbSend %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"reverbSend"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"reverbSend"])
         //[self setAllUnlit];
    //[previousSlider setString:@"reverbSend"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)reverbWheelIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[reverbWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=84;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setReverbWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nreverbWheel %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"reverbWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"reverbWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"reverbWheel"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)reverbDecayIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[reverbDecay flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=95;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setReverbDecay:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nreverbDecay %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"reverbDecay"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"reverbDecay"])
         //[self setAllUnlit];
    //[previousSlider setString:@"reverbDecay"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)reverbHfDampIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[reverbHfDamp flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=96;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setReverbHfDamp:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nreverbHfDamp %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"reverbHfDamp"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"reverbHfDamp"])
         //[self setAllUnlit];
    //[previousSlider setString:@"reverbHfDamp"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)chorusSendIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[chorusSend flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=93;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setChorusSend:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nchorusSend %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"chorusSend"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"chorusSend"])
         //[self setAllUnlit];
    //[previousSlider setString:@"chorusSend"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)chorusWheelIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[chorusWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=94;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setChorusWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nchorusWheel %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"chorusWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"chorusWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"chorusWheel"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)chorusSpeedIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[chorusSpeed flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=87;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setChorusSpeed:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nchorusSpeed %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"chorusSpeed"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"chorusSpeed"])
         //[self setAllUnlit];
    //[previousSlider setString:@"chorusSpeed"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)chorusModDepthIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[chorusModDepth flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=88;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setChorusModDepth:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nchorusModDepth %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"chorusModDepth"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"chorusModDepth"])
         //[self setAllUnlit];
    //[previousSlider setString:@"chorusModDepth"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)chorusFeedbackIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[chorusFeedback flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=89;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setChorusFeedback:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nchorusFeedback %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"chorusFeedback"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"chorusFeedback"])
         //[self setAllUnlit];
    //[previousSlider setString:@"chorusFeedback"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)delaySendIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[delaySend flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=92;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setDelaySend:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ndelaySend %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"delaySend"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"delaySend"])
         //[self setAllUnlit];
    //[previousSlider setString:@"delaySend"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)delayWheelIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[delayWheel flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=119;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setDelayWheel:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ndelayWheel %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"delayWheel"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"delayWheel"])
         //[self setAllUnlit];
    //[previousSlider setString:@"delayWheel"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)delayTimeIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[delayTime flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=101;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setDelayTime:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ndelayTime %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"delayTime"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"delayTime"])
         //[self setAllUnlit];
    //[previousSlider setString:@"delayTime"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)delayFeedbackIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[delayFeedback flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=102;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setDelayFeedback:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ndelayFeedback %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"delayFeedback"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"delayFeedback"])
         //[self setAllUnlit];
    //[previousSlider setString:@"delayFeedback"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)delayHfDampIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[delayHfDamp flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=103;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setDelayHfDamp:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\ndelayHfDamp %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"delayHfDamp"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"delayHfDamp"])
         //[self setAllUnlit];
    //[previousSlider setString:@"delayHfDamp"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)configMorphIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[configMorph flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=8;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setConfigMorph:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nconfigMorph %d",[sender intValue]]];
    [defaults setInteger:[sender intValue] forKey:@"configMorph"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"configMorph"])
         //[self setAllUnlit];
    //[previousSlider setString:@"configMorph"];
    //[self setAllNeedsDisplay];
    [self initAll];
    
}
-(IBAction)osc1PitchEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1PitchEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=20;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1PitchEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1PitchEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1PitchEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1PitchEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1PitchEnv2"];
    [self initAll];
    
}
-(IBAction)osc1PitchEnv3In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1PitchEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=66;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1PitchEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1PitchEnv3 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1PitchEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1PitchEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1PitchEnv3"];
    [self initAll];
    
}
-(IBAction)osc1PitchLfo1In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1PitchLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=21;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1PitchLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1PitchLfo1 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1PitchLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1PitchLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1PitchLfo1"];
    [self initAll];
    
}
-(IBAction)osc1SoftenEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1SoftenEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=61;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1SoftenEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1SoftenEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1SoftenEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1SoftenEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1SoftenEnv2"];
    [self initAll];
    
}
-(IBAction)osc1WidthEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1WidthEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=43;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1WidthEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1WidthEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1WidthEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1WidthEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1WidthEnv2"];
    [self initAll];
    
}
-(IBAction)osc1WidthLfo1In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1WidthLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=46;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1WidthLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1WidthLfo1 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1WidthLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1WidthLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1WidthLfo1"];
    [self initAll];
    
}
-(IBAction)osc1WidthLfo2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1WidthLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=69;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1WidthLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1WidthLfo2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1WidthLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1WidthLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1WidthLfo2"];
    [self initAll];
    
}
-(IBAction)osc1SyncEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1SyncEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=52;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1SyncEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1SyncEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1SyncEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1SyncEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1SyncEnv2"];
    [self initAll];
    
}
-(IBAction)osc1SyncLfo1In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1SyncLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=55;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1SyncLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1SyncLfo1 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1SyncLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1SyncLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1SyncLfo1"];
    [self initAll];
    
}
-(IBAction)osc2PitchEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2PitchEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=25;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2PitchEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2PitchEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2PitchEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2PitchEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2PitchEnv2"];
    [self initAll];
    
}
-(IBAction)osc2PitchEnv3In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2PitchEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=67;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2PitchEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2PitchEnv3 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2PitchEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2PitchEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2PitchEnv3"];
    [self initAll];
    
}
-(IBAction)osc2PitchLfo1In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2PitchLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=26;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2PitchLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2PitchLfo1 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2PitchLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2PitchLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2PitchLfo1"];
    [self initAll];
    
}
-(IBAction)osc2SoftenEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2SoftenEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=62;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2SoftenEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2SoftenEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2SoftenEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2SoftenEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2SoftenEnv2"];
    [self initAll];
    
}
-(IBAction)osc2WidthEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2WidthEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=44;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2WidthEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2WidthEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2WidthEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2WidthEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2WidthEnv2"];
    [self initAll];
    
}
-(IBAction)osc2WidthLfo1In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2WidthLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=47;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2WidthLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2WidthLfo1 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2WidthLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2WidthLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2WidthLfo1"];
    [self initAll];
    
}
-(IBAction)osc2WidthLfo2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2WidthLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=70;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2WidthLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2WidthLfo2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2WidthLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2WidthLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2WidthLfo2"];
    [self initAll];
    
}
-(IBAction)osc2SyncEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2SyncEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=53;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2SyncEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2SyncEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2SyncEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2SyncEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2SyncEnv2"];
    [self initAll];
    
}
-(IBAction)osc2SyncLfo1In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2SyncLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=56;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2SyncLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2SyncLfo1 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2SyncLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2SyncLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2SyncLfo1"];
    [self initAll];
    
}
-(IBAction)osc3PitchEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3PitchEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=40;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3PitchEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3PitchEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3PitchEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3PitchEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3PitchEnv2"];
    [self initAll];
    
}
-(IBAction)osc3PitchEnv3In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3PitchEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=68;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3PitchEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3PitchEnv3 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3PitchEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3PitchEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3PitchEnv3"];
    [self initAll];
    
}
-(IBAction)osc3PitchLfo1In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3PitchLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=41;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3PitchLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3PitchLfo1 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3PitchLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3PitchLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3PitchLfo1"];
    [self initAll];
    
}
-(IBAction)osc3SoftenEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3SoftenEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=63;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3SoftenEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3SoftenEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3SoftenEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3SoftenEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3SoftenEnv2"];
    [self initAll];
    
}
-(IBAction)osc3WidthEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3WidthEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=45;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3WidthEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3WidthEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3WidthEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3WidthEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3WidthEnv2"];
    [self initAll];
    
}
-(IBAction)osc3WidthLfo1In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3WidthLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=48;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3WidthLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3WidthLfo1 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3WidthLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3WidthLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3WidthLfo1"];
    [self initAll];
    
}
-(IBAction)osc3WidthLfo2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3WidthLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=71;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3WidthLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3WidthLfo2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3WidthLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3WidthLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3WidthLfo2"];
    [self initAll];
    
}
-(IBAction)osc3SyncEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3SyncEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=54;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3SyncEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3SyncEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3SyncEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3SyncEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3SyncEnv2"];
    [self initAll];
    
}
-(IBAction)osc3SyncLfo1In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3SyncLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=57;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3SyncLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3SyncLfo1 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3SyncLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3SyncLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3SyncLfo1"];
    [self initAll];
    
}
-(IBAction)osc1MixEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc1MixEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=36;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc1MixEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc1MixEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc1MixEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc1MixEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc1MixEnv2"];
    [self initAll];
    
}
-(IBAction)osc2MixEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc2MixEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=37;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc2MixEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc2MixEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc2MixEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc2MixEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc2MixEnv2"];
    [self initAll];
    
}
-(IBAction)osc3MixEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[osc3MixEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=38;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setOsc3MixEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nosc3MixEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"osc3MixEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"osc3MixEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"osc3MixEnv2"];
    [self initAll];
    
}
-(IBAction)filterFrequencyEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterFrequencyEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=107;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setFilterFrequencyEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterFrequencyEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterFrequencyEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterFrequencyEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterFrequencyEnv2"];
    [self initAll];
    
}
-(IBAction)filterFrequencyEnv3In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterFrequencyEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=59;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setFilterFrequencyEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterFrequencyEnv3 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterFrequencyEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterFrequencyEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterFrequencyEnv3"];
    [self initAll];
    
}
-(IBAction)filterFrequencyLfo1In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterFrequencyLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=60;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setFilterFrequencyLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterFrequencyLfo1 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterFrequencyLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterFrequencyLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterFrequencyLfo1"];
    [self initAll];
    
}
-(IBAction)filterFrequencyLfo2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterFrequencyLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=35;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setFilterFrequencyLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterFrequencyLfo2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterFrequencyLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterFrequencyLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterFrequencyLfo2"];
    [self initAll];
    
}
-(IBAction)filterResonanceEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterResonanceEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=72;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setFilterResonanceEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterResonanceEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterResonanceEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterResonanceEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterResonanceEnv2"];
    [self initAll];
    
}
-(IBAction)filterResonanceEnv3In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterResonanceEnv3 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=85;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setFilterResonanceEnv3:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterResonanceEnv3 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterResonanceEnv3"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterResonanceEnv3"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterResonanceEnv3"];
    [self initAll];
    
}
-(IBAction)filterResonanceLfo1In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterResonanceLfo1 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=73;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setFilterResonanceLfo1:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterResonanceLfo1 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterResonanceLfo1"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterResonanceLfo1"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterResonanceLfo1"];
    [self initAll];
    
}
-(IBAction)filterResonanceLfo2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[filterResonanceLfo2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=86;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setFilterResonanceLfo2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nfilterResonanceLfo2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"filterResonanceLfo2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"filterResonanceLfo2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"filterResonanceLfo2"];
    [self initAll];
    
}
-(IBAction)lfo1Env3SpeedModIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[lfo1Env3SpeedMod flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=80;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setLfo1Env3SpeedMod:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo1Env3SpeedMod %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"lfo1Env3SpeedMod"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"lfo1Env3SpeedMod"])
         //[self setAllUnlit];
    //[previousSlider setString:@"lfo1Env3SpeedMod"];
    [self initAll];
    
}
-(IBAction)lfo2Env3SpeedModIn:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[lfo2Env3SpeedMod flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=81;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setLfo2Env3SpeedMod:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nlfo2Env3SpeedMod %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"lfo2Env3SpeedMod"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"lfo2Env3SpeedMod"])
         //[self setAllUnlit];
    //[previousSlider setString:@"lfo2Env3SpeedMod"];
    [self initAll];
    
}
-(IBAction)noiseMixEnv2In:(id)sender
{
    MIDITimeStamp now = 0;
    MIDIPacketList *packetList=(MIDIPacketList *)messageBuffer;
    MIDIPacket *packet;
    //[noiseMixEnv2 flash];
    packet=MIDIPacketListInit (packetList);
    midiMessage[0]=175+channel;
    midiMessage[2]=[sender intValue];
    midiMessage[1]=39;
    MIDIPacketListAdd(packetList,sizeof(messageBuffer),packet,now,6,midiMessage);
    [program setNoiseMixEnv2:[sender intValue]];
    [destination processMIDIPacketList:packetList sender:self];
    [display2 insertText:[NSString localizedStringWithFormat:@"\nCC   %d %d %d ",midiMessage[0],midiMessage[1],midiMessage[2]]];
    [display insertText:[NSString localizedStringWithFormat:@"\n\nnoiseMixEnv2 %d",[sender intValue]]];
    [cableView setNeedsDisplay:true];
    [defaults setInteger:[sender intValue] forKey:@"noiseMixEnv2"];
    //NSLog(@"****%@****",previousSlider);
    //if(![previousSlider isEqual:@"noiseMixEnv2"])
         //[self setAllUnlit];
    //[previousSlider setString:@"noiseMixEnv2"];
    [self initAll];
    
}
